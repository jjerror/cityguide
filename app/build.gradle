buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.0.0'
        classpath 'org.robolectric:robolectric-gradle-plugin:0.14.+'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'checkstyle'
apply plugin: 'robolectric'

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    defaultConfig {
        applicationId "com.example.joshua.cityguide"
        minSdkVersion 15
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"
    }
    signingConfigs {
        release {
            try {
                storeFile file("cityguide.keystore")
                storePassword KEYSTORE_PASSWORD
                keyAlias "client"
                keyPassword KEY_PASSWORD
            }
            catch (ex) {
                throw new InvalidUserDataException("You should define KEYSTORE_PASSWORD and " +
                        "KEY_PASSWORD in gradle.properties."
                )
            }
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            signingConfig signingConfigs.release
            // disable proguard for now
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        disable 'InvalidPackage'
    }
    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:21.0.3'
    compile 'com.google.android.gms:play-services:6.5.87'
    compile 'io.reactivex:rxjava:1.0.+'
    compile 'io.reactivex:rxandroid:0.23.+'
    compile 'com.squareup.retrofit:retrofit:1.6.1'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.0.0'
    compile 'com.squareup.okhttp:okhttp:2.0.0'
    compile 'com.squareup.dagger:dagger:1.2.2'
    compile 'com.squareup:otto:1.3.6'
    compile 'com.jakewharton:butterknife:6.0.0'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.4.+'
    compile 'com.fasterxml.jackson.core:jackson-core:2.4.+'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.4.+'
    compile 'com.squareup:otto:1.3.6'
    provided 'com.squareup.dagger:dagger-compiler:1.2.2'


    androidTestCompile 'com.jayway.android.robotium:robotium-solo:5.1'

    androidTestCompile('junit:junit:4.11')
    androidTestCompile('org.robolectric:robolectric:2.3') {
        exclude module: 'classworlds'
        exclude module: 'commons-logging'
        exclude module: 'httpclient'
        exclude module: 'maven-artifact'
        exclude module: 'maven-artifact-manager'
        exclude module: 'maven-error-diagnostics'
        exclude module: 'maven-model'
        exclude module: 'maven-project'
        exclude module: 'maven-settings'
        exclude module: 'plexus-container-default'
        exclude module: 'plexus-interpolation'
        exclude module: 'plexus-utils'
        exclude module: 'wagon-file'
        exclude module: 'wagon-http-lightweight'
        exclude module: 'wagon-provider-api'
    }
}

task checkstyle(type: Checkstyle) {
    description 'Checks if the code is somewhat acceptable'
    configFile file('./checkstyle.xml')
    source 'src/main/java'
    include '**/*.java'
    exclude '**/gen/**'
    classpath = files() // empty because unnecessary for checkstyle
}

// Get location of adb
Properties localProperties = new Properties()
try {
    localProperties.load(project.rootProject.file('local.properties').newDataInputStream())
}
catch (ex) {
    throw new InvalidUserDataException("You should define the path to your Android SDK as a " +
            "property `sdk.dir` in local.properties on the project root."
    )
}
def adb = localProperties.getProperty('sdk.dir') + '/platform-tools/adb'

task runDebug(dependsOn: 'installDebug') {
    description 'Runs the debug-flavour of the app on the connected device'
    doLast {
        exec {
            commandLine "$adb", "shell", "am", "start", "-n", "com.futurice.project/.MainActivity"
        }
    }
}

task runRelease(dependsOn: 'installRelease') {
    description 'Runs the release-flavour of the app on the connected device'
    doLast {
        exec {
            commandLine "$adb", "shell", "am", "start", "-n", "com.futurice.project/.MainActivity"
        }
    }
}
